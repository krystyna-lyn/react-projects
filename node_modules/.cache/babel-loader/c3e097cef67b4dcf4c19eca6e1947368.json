{"ast":null,"code":"/**\n * react-router v7.6.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { FrameworkContext, RemixErrorBoundary, RouterProvider, createBrowserHistory, createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createRouter, decodeViaTurboStream, deserializeErrors, getHydrationData, getPatchRoutesOnNavigationFunction, getTurboStreamSingleFetchDataStrategy, hydrationRouteProperties, invariant, mapRouteProperties, useFogOFWarDiscovery } from \"./chunk-NL6KNZEE.mjs\"; // lib/dom-export/dom-router-provider.tsx\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n} // lib/dom-export/hydrated-router.tsx\n\n\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\n\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(importMap.textContent).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\n\nfunction createHydratedRouter(_ref) {\n  let {\n    unstable_getContext\n  } = _ref;\n  initSsrInfo();\n\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n\n  let localSsrInfo = ssrInfo;\n\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n\n  if (ssrInfo.context.isSpaMode) {\n    let {\n      loaderData\n    } = ssrInfo.context.state;\n\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = getHydrationData(ssrInfo.context.state, routes, routeId => ({\n      clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\n      hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\n      hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\n    }), window.location, window.__reactRouterContext?.basename, ssrInfo.context.isSpaMode);\n\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(() => router2, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.basename),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.routeDiscovery, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n\n  router2.createRoutesForHMR =\n  /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\n\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n\n  let [criticalCss, setCriticalCss] = React2.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.routeDiscovery, ssrInfo.context.isSpaMode);\n  return (// This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n\n    /* @__PURE__ */\n    React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        ssr: ssrInfo.context.ssr,\n        isSpaMode: ssrInfo.context.isSpaMode,\n        routeDiscovery: ssrInfo.context.routeDiscovery\n      }\n    }, /* @__PURE__ */React2.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React2.createElement(RouterProvider2, {\n      router\n    }))), /* @__PURE__ */React2.createElement(React2.Fragment, null))\n  );\n}\n\nexport { HydratedRouter, RouterProvider2 as RouterProvider };","map":{"version":3,"names":["FrameworkContext","RemixErrorBoundary","RouterProvider","createBrowserHistory","createClientRoutes","createClientRoutesWithHMRRevalidationOptOut","createRouter","decodeViaTurboStream","deserializeErrors","getHydrationData","getPatchRoutesOnNavigationFunction","getTurboStreamSingleFetchDataStrategy","hydrationRouteProperties","invariant","mapRouteProperties","useFogOFWarDiscovery","React","ReactDOM","RouterProvider2","props","createElement","flushSync","React2","ssrInfo","router","initSsrInfo","window","__reactRouterContext","__reactRouterManifest","__reactRouterRouteModules","sri","importMap","document","querySelector","textContent","JSON","parse","integrity","err","console","error","context","manifest","routeModules","stateDecodingPromise","routerInitialized","createHydratedRouter","unstable_getContext","Error","localSsrInfo","stream","then","value","state","catch","e","routes","ssr","isSpaMode","hydrationData","loaderData","root","hasLoader","routeId","clientLoader","hasHydrateFallback","HydrateFallback","location","basename","errors","router2","history","future","unstable_middleware","dataStrategy","patchRoutesOnNavigation","routeDiscovery","initialized","initialize","createRoutesForHMR","__reactRouterDataRouter","HydratedRouter","criticalCss","setCriticalCss","useState","process","env","NODE_ENV","__reactRouterClearCriticalCss","setLocation","useLayoutEffect","subscribe","newState","Fragment","Provider"],"sources":["/Users/krystynakhlynina/Documents/react/react-projects/node_modules/react-router/dist/development/dom-export.mjs"],"sourcesContent":["/**\n * react-router v7.6.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport {\n  FrameworkContext,\n  RemixErrorBoundary,\n  RouterProvider,\n  createBrowserHistory,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createRouter,\n  decodeViaTurboStream,\n  deserializeErrors,\n  getHydrationData,\n  getPatchRoutesOnNavigationFunction,\n  getTurboStreamSingleFetchDataStrategy,\n  hydrationRouteProperties,\n  invariant,\n  mapRouteProperties,\n  useFogOFWarDiscovery\n} from \"./chunk-NL6KNZEE.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(\n            importMap.textContent\n          ).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  unstable_getContext\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  if (ssrInfo.context.isSpaMode) {\n    let { loaderData } = ssrInfo.context.state;\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = getHydrationData(\n      ssrInfo.context.state,\n      routes,\n      (routeId) => ({\n        clientLoader: ssrInfo.routeModules[routeId]?.clientLoader,\n        hasLoader: ssrInfo.manifest.routes[routeId]?.hasLoader === true,\n        hasHydrateFallback: ssrInfo.routeModules[routeId]?.HydrateFallback != null\n      }),\n      window.location,\n      window.__reactRouterContext?.basename,\n      ssrInfo.context.isSpaMode\n    );\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getTurboStreamSingleFetchDataStrategy(\n      () => router2,\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.basename\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.routeDiscovery,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.ssr,\n    ssrInfo.context.routeDiscovery,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          ssr: ssrInfo.context.ssr,\n          isSpaMode: ssrInfo.context.isSpaMode,\n          routeDiscovery: ssrInfo.context.routeDiscovery\n        }\n      },\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\n  );\n}\nexport {\n  HydratedRouter,\n  RouterProvider2 as RouterProvider\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}